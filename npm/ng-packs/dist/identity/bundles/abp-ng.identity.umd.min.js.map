{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.identity/lib/actions/identity.actions.ts","ng://@abp/ng.identity/lib/models/identity.ts","ng://@abp/ng.identity/lib/services/identity.service.ts","ng://@abp/ng.identity/lib/states/identity.state.ts","ng://@abp/ng.identity/lib/components/roles/roles.component.ts","ng://@abp/ng.identity/lib/resolvers/roles.resolver.ts","ng://@abp/ng.identity/lib/components/users/users.component.ts","ng://@abp/ng.identity/lib/resolvers/users.resolver.ts","ng://@abp/ng.identity/lib/identity-routing.module.ts","ng://@abp/ng.identity/lib/identity.module.ts","ng://@abp/ng.identity/lib/constants/routes.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","m","Symbol","iterator","e","ar","next","done","push","value","error","Identity","IdentityGetRoles","type","IdentityGetRoleById","payload","IdentityDeleteRole","IdentityAddRole","IdentityUpdateRole","IdentityGetUsers","IdentityGetUserById","IdentityDeleteUser","IdentityAddUser","IdentityUpdateUser","IdentityGetUserRoles","IdentityService","rest","getRoles","request","method","url","getRoleById","id","deleteRole","addRole","body","updateRole","getUsers","params","getUserById","getUserRoles","deleteUser","addUser","updateUser","Injectable","args","providedIn","RestService","IdentityState","identityService","_a","roles","items","getRolesTotalCount","totalCount","users","getUsersTotalCount","patchState","pipe","tap","getRole","_b","selectedRole","dispatch","switchMap","_this","getState","getUser","selectedUser","pluck","selectedUserRoles","tslib_1.__decorate","Action","Selector","State","name","defaults","RolesComponent","confirmationService","fb","store","visiblePermissions","createForm","form","group","selected","Validators","required","maxLength","isDefault","isPublic","openModal","isModalVisible","onAdd","onEdit","subscribe","save","valid","delete","warn","messageLocalizationParams","status","Component","selector","template","ConfirmationService","FormBuilder","Store","ViewChild","static","Select","Observable","RoleResolver","resolve","selectSnapshot","UsersComponent","pageQuery","sorting","loading","search$","Subject","trackByFn","index","item","keys","snq","get","ngOnInit","debounceTime","filter","buildForm","password","minLength","validatePassword","userName","email","surname","phoneNumber","lockoutEnabled","twoFactorEnabled","roleNames","array","map","role","find","userRole","combineLatest","res1","res2","state","take","mappedRoleNames","onPageChange","data","skipCount","first","maxResultCount","rows","UserResolver","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","requiredPolicy","children","IdentityRoutingModule","NgModule","imports","RouterModule","forChild","exports","providers","IdentityModule","declarations","NgxsModule","forFeature","CoreModule","NgbTabsetModule","ThemeSharedModule","TableModule","NgbDropdownModule","PermissionManagementModule","NgxValidateCoreModule","PerfectScrollbarModule","order","wrapper","parentName","layout"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Identity } from '../models/identity';\nimport { ABP } from '@abp/ng.core';\n\nexport class IdentityGetRoles {\n  static readonly type = '[Identity] Get Roles';\n}\n\nexport class IdentityGetRoleById {\n  static readonly type = '[Identity] Get Role By Id';\n  constructor(public payload: string) {}\n}\n\nexport class IdentityDeleteRole {\n  static readonly type = '[Identity] Delete Role';\n  constructor(public payload: string) {}\n}\n\nexport class IdentityAddRole {\n  static readonly type = '[Identity] Add Role';\n  constructor(public payload: Identity.RoleSaveRequest) {}\n}\n\nexport class IdentityUpdateRole {\n  static readonly type = '[Identity] Update Role';\n  constructor(public payload: Identity.RoleItem) {}\n}\n\nexport class IdentityGetUsers {\n  static readonly type = '[Identity] Get Users';\n  constructor(public payload?: ABP.PageQueryParams) {}\n}\n\nexport class IdentityGetUserById {\n  static readonly type = '[Identity] Get User By Id';\n  constructor(public payload: string) {}\n}\n\nexport class IdentityDeleteUser {\n  static readonly type = '[Identity] Delete User';\n  constructor(public payload: string) {}\n}\n\nexport class IdentityAddUser {\n  static readonly type = '[Identity] Add User';\n  constructor(public payload: Identity.UserSaveRequest) {}\n}\n\nexport class IdentityUpdateUser {\n  static readonly type = '[Identity] Update User';\n  constructor(public payload: Identity.UserSaveRequest & { id: string }) {}\n}\n\nexport class IdentityGetUserRoles {\n  static readonly type = '[Identity] Get User Roles';\n  constructor(public payload: string) {}\n}\n","import { ABP } from '@abp/ng.core';\n\nexport namespace Identity {\n  export interface State {\n    roles: RoleResponse;\n    users: UserResponse;\n    selectedRole: RoleItem;\n    selectedUser: UserItem;\n    selectedUserRoles: RoleItem[];\n  }\n\n  export type RoleResponse = ABP.PagedResponse<RoleItem>;\n\n  export interface RoleSaveRequest {\n    name: string;\n    isDefault: boolean;\n    isPublic: boolean;\n  }\n\n  export interface RoleItem extends RoleSaveRequest {\n    isStatic: boolean;\n    concurrencyStamp: string;\n    id: string;\n  }\n\n  export type UserResponse = ABP.PagedResponse<UserItem>;\n\n  export interface UserItem extends User {\n    tenantId: string;\n    emailConfirmed: boolean;\n    phoneNumberConfirmed: boolean;\n    isLockedOut: boolean;\n    concurrencyStamp: string;\n    id: string;\n  }\n\n  export interface User {\n    userName: string;\n    name: string;\n    surname: string;\n    email: string;\n    phoneNumber: string;\n    twoFactorEnabled: true;\n    lockoutEnabled: true;\n  }\n\n  export interface UserSaveRequest extends User {\n    password: string;\n    roleNames: string[];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { Identity } from '../models/identity';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IdentityService {\n  constructor(private rest: RestService) {}\n\n  getRoles(): Observable<Identity.RoleResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/roles',\n    };\n\n    return this.rest.request<null, Identity.RoleResponse>(request);\n  }\n\n  getRoleById(id: string): Observable<Identity.RoleItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/roles/${id}`,\n    };\n\n    return this.rest.request<null, Identity.RoleItem>(request);\n  }\n\n  deleteRole(id: string): Observable<Identity.RoleItem> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/identity/roles/${id}`,\n    };\n\n    return this.rest.request<null, Identity.RoleItem>(request);\n  }\n\n  addRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\n      method: 'POST',\n      url: '/api/identity/roles',\n      body,\n    };\n\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request);\n  }\n\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\n    const url = `/api/identity/roles/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<Identity.RoleItem> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request);\n  }\n\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/identity/users',\n      params,\n    };\n\n    return this.rest.request<null, Identity.UserResponse>(request);\n  }\n\n  getUserById(id: string): Observable<Identity.UserItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/users/${id}`,\n    };\n\n    return this.rest.request<null, Identity.UserItem>(request);\n  }\n\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/identity/users/${id}/roles`,\n    };\n\n    return this.rest.request<null, Identity.RoleResponse>(request);\n  }\n\n  deleteUser(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/identity/users/${id}`,\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  addUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\n    const request: Rest.Request<Identity.UserSaveRequest> = {\n      method: 'POST',\n      url: '/api/identity/users',\n      body,\n    };\n\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request);\n  }\n\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\n    const url = `/identity/users/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<Identity.UserItem> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap, pluck } from 'rxjs/operators';\nimport {\n  IdentityAddRole,\n  IdentityAddUser,\n  IdentityDeleteRole,\n  IdentityDeleteUser,\n  IdentityGetRoleById,\n  IdentityGetRoles,\n  IdentityGetUserById,\n  IdentityGetUsers,\n  IdentityUpdateRole,\n  IdentityUpdateUser,\n  IdentityGetUserRoles,\n} from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityService } from '../services/identity.service';\n\n@State<Identity.State>({\n  name: 'IdentityState',\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\n})\nexport class IdentityState {\n  @Selector()\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\n    return roles.items;\n  }\n\n  @Selector()\n  static getRolesTotalCount({ roles }: Identity.State): number {\n    return roles.totalCount;\n  }\n\n  @Selector()\n  static getUsers({ users }: Identity.State): Identity.UserItem[] {\n    return users.items;\n  }\n\n  @Selector()\n  static getUsersTotalCount({ users }: Identity.State): number {\n    return users.totalCount;\n  }\n\n  constructor(private identityService: IdentityService) {}\n\n  @Action(IdentityGetRoles)\n  getRoles({ patchState }: StateContext<Identity.State>) {\n    return this.identityService.getRoles().pipe(\n      tap(roles =>\n        patchState({\n          roles,\n        }),\n      ),\n    );\n  }\n\n  @Action(IdentityGetRoleById)\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: IdentityGetRoleById) {\n    return this.identityService.getRoleById(payload).pipe(\n      tap(selectedRole =>\n        patchState({\n          selectedRole,\n        }),\n      ),\n    );\n  }\n\n  @Action(IdentityDeleteRole)\n  deleteRole({ dispatch }: StateContext<Identity.State>, { payload }: IdentityGetRoleById) {\n    return this.identityService.deleteRole(payload).pipe(switchMap(() => dispatch(new IdentityGetRoles())));\n  }\n\n  @Action(IdentityAddRole)\n  addRole({ dispatch }: StateContext<Identity.State>, { payload }: IdentityAddRole) {\n    return this.identityService.addRole(payload).pipe(switchMap(() => dispatch(new IdentityGetRoles())));\n  }\n\n  @Action(IdentityUpdateRole)\n  updateRole({ getState, dispatch }: StateContext<Identity.State>, { payload }: IdentityUpdateRole) {\n    return dispatch(new IdentityGetRoleById(payload.id)).pipe(\n      switchMap(() => this.identityService.updateRole({ ...getState().selectedRole, ...payload })),\n      switchMap(() => dispatch(new IdentityGetRoles())),\n    );\n  }\n\n  @Action(IdentityGetUsers)\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: IdentityGetUsers) {\n    return this.identityService.getUsers(payload).pipe(\n      tap(users =>\n        patchState({\n          users,\n        }),\n      ),\n    );\n  }\n\n  @Action(IdentityGetUserById)\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: IdentityGetUserById) {\n    return this.identityService.getUserById(payload).pipe(\n      tap(selectedUser =>\n        patchState({\n          selectedUser,\n        }),\n      ),\n    );\n  }\n\n  @Action(IdentityDeleteUser)\n  deleteUser({ dispatch }: StateContext<Identity.State>, { payload }: IdentityGetUserById) {\n    return this.identityService.deleteUser(payload).pipe(switchMap(() => dispatch(new IdentityGetUsers())));\n  }\n\n  @Action(IdentityAddUser)\n  addUser({ dispatch }: StateContext<Identity.State>, { payload }: IdentityAddUser) {\n    return this.identityService.addUser(payload).pipe(switchMap(() => dispatch(new IdentityGetUsers())));\n  }\n\n  @Action(IdentityUpdateUser)\n  updateUser({ getState, dispatch }: StateContext<Identity.State>, { payload }: IdentityUpdateUser) {\n    return dispatch(new IdentityGetUserById(payload.id)).pipe(\n      switchMap(() => this.identityService.updateUser({ ...getState().selectedUser, ...payload })),\n      switchMap(() => dispatch(new IdentityGetUsers())),\n    );\n  }\n\n  @Action(IdentityGetUserRoles)\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: IdentityGetUserRoles) {\n    return this.identityService.getUserRoles(payload).pipe(\n      pluck('items'),\n      tap(selectedUserRoles =>\n        patchState({\n          selectedUserRoles,\n        }),\n      ),\n    );\n  }\n}\n","import { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { IdentityState } from '../../states/identity.state';\nimport { Identity } from '../../models/identity';\nimport {\n  IdentityUpdateRole,\n  IdentityAddRole,\n  IdentityDeleteRole,\n  IdentityGetRoleById,\n} from '../../actions/identity.actions';\nimport { pluck } from 'rxjs/operators';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\n\n@Component({\n  selector: 'abp-roles',\n  templateUrl: './roles.component.html',\n})\nexport class RolesComponent {\n  @Select(IdentityState.getRoles)\n  roles$: Observable<Identity.RoleItem[]>;\n\n  form: FormGroup;\n\n  selected: Identity.RoleItem;\n\n  isModalVisible: boolean;\n\n  visiblePermissions: boolean = false;\n\n  providerKey: string;\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\n\n  createForm() {\n    this.form = this.fb.group({\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\n      isDefault: [this.selected.isDefault || false],\n      isPublic: [this.selected.isPublic || false],\n    });\n  }\n\n  openModal() {\n    this.createForm();\n    this.isModalVisible = true;\n  }\n\n  onAdd() {\n    this.selected = {} as Identity.RoleItem;\n    this.openModal();\n  }\n\n  onEdit(id: string) {\n    this.store\n      .dispatch(new IdentityGetRoleById(id))\n      .pipe(pluck('IdentityState', 'selectedRole'))\n      .subscribe(selectedRole => {\n        this.selected = selectedRole;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new IdentityUpdateRole({ ...this.form.value, id: this.selected.id })\n          : new IdentityAddRole(this.form.value),\n      )\n      .subscribe(() => {\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new IdentityDeleteRole(id));\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { IdentityGetRoles } from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityState } from '../states/identity.state';\n\n@Injectable()\nexport class RoleResolver implements Resolve<Identity.State> {\n  constructor(private store: Store) {}\n\n  resolve() {\n    const roles = this.store.selectSnapshot(IdentityState.getRoles);\n    return roles && roles.length ? null : this.store.dispatch(new IdentityGetRoles());\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, OnInit, TemplateRef, TrackByFunction, ViewChild } from '@angular/core';\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { validatePassword } from '@ngx-validate/core';\nimport { Select, Store } from '@ngxs/store';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { debounceTime, filter, map, pluck, take } from 'rxjs/operators';\nimport snq from 'snq';\nimport {\n  IdentityAddUser,\n  IdentityDeleteUser,\n  IdentityGetUserById,\n  IdentityGetUserRoles,\n  IdentityGetUsers,\n  IdentityUpdateUser,\n} from '../../actions/identity.actions';\nimport { Identity } from '../../models/identity';\nimport { IdentityState } from '../../states/identity.state';\n@Component({\n  selector: 'abp-users',\n  templateUrl: './users.component.html',\n})\nexport class UsersComponent implements OnInit {\n  @Select(IdentityState.getUsers)\n  data$: Observable<Identity.UserItem[]>;\n\n  @Select(IdentityState.getUsersTotalCount)\n  totalCount$: Observable<number>;\n\n  @ViewChild('modalContent', { static: false })\n  modalContent: TemplateRef<any>;\n\n  form: FormGroup;\n\n  selected: Identity.UserItem;\n\n  selectedUserRoles: Identity.RoleItem[];\n\n  roles: Identity.RoleItem[];\n\n  visiblePermissions: boolean = false;\n\n  providerKey: string;\n\n  pageQuery: ABP.PageQueryParams = {\n    sorting: 'userName',\n  };\n\n  isModalVisible: boolean;\n\n  loading: boolean = false;\n\n  search$ = new Subject<string>();\n\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\n\n  get roleGroups(): FormGroup[] {\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\n  }\n\n  constructor(private confirmationService: ConfirmationService, private fb: FormBuilder, private store: Store) {}\n\n  ngOnInit() {\n    this.search$.pipe(debounceTime(300)).subscribe(value => {\n      this.pageQuery.filter = value;\n      this.get();\n    });\n  }\n\n  buildForm() {\n    this.roles = this.store.selectSnapshot(IdentityState.getRoles);\n\n    this.form = this.fb.group({\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.maxLength(32),\n          Validators.minLength(6),\n          validatePassword(['small', 'capital', 'number', 'special']),\n        ],\n      ],\n      userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\n      email: [this.selected.email || '', [Validators.required, Validators.email, Validators.maxLength(256)]],\n      name: [this.selected.name || '', [Validators.maxLength(64)]],\n      surname: [this.selected.surname || '', [Validators.maxLength(64)]],\n      phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\n      lockoutEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\n      twoFactorEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\n      roleNames: this.fb.array(\n        this.roles.map(role =>\n          this.fb.group({\n            [role.name]: [!!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))],\n          }),\n        ),\n      ),\n    });\n  }\n\n  openModal() {\n    this.buildForm();\n    this.isModalVisible = true;\n  }\n\n  onAdd() {\n    this.selected = {} as Identity.UserItem;\n    this.selectedUserRoles = [] as Identity.RoleItem[];\n    this.openModal();\n  }\n\n  onEdit(id: string) {\n    combineLatest([this.store.dispatch(new IdentityGetUserById(id)), this.store.dispatch(new IdentityGetUserRoles(id))])\n      .pipe(\n        filter(([res1, res2]) => res1 && res2),\n        map(([state, _]) => state),\n        pluck('IdentityState'),\n        take(1),\n      )\n      .subscribe((state: Identity.State) => {\n        this.selected = state.selectedUser;\n        this.selectedUserRoles = state.selectedUserRoles;\n        this.openModal();\n      });\n  }\n\n  save() {\n    if (!this.form.valid) return;\n\n    const { roleNames } = this.form.value;\n    const mappedRoleNames = snq(\n      () => roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\n      [],\n    );\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new IdentityUpdateUser({\n              ...this.form.value,\n              id: this.selected.id,\n              roleNames: mappedRoleNames,\n            })\n          : new IdentityAddUser({\n              ...this.form.value,\n              roleNames: mappedRoleNames,\n            }),\n      )\n      .subscribe(() => {\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, userName: string) {\n    this.confirmationService\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\n        messageLocalizationParams: [userName],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new IdentityDeleteUser(id));\n        }\n      });\n  }\n\n  onPageChange(data) {\n    this.pageQuery.skipCount = data.first;\n    this.pageQuery.maxResultCount = data.rows;\n\n    this.get();\n  }\n\n  get() {\n    this.loading = true;\n    this.store.dispatch(new IdentityGetUsers(this.pageQuery)).subscribe(() => (this.loading = false));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { IdentityGetUsers } from '../actions/identity.actions';\nimport { Identity } from '../models/identity';\nimport { IdentityState } from '../states/identity.state';\n\n@Injectable()\nexport class UserResolver implements Resolve<Identity.State> {\n  constructor(private store: Store) {}\n\n  resolve() {\n    const users = this.store.selectSnapshot(IdentityState.getUsers);\n    return users && users.length ? null : this.store.dispatch(new IdentityGetUsers());\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { RoleResolver } from './resolvers/roles.resolver';\nimport { DynamicLayoutComponent, AuthGuard, PermissionGuard } from '@abp/ng.core';\nimport { UsersComponent } from './components/users/users.component';\nimport { UserResolver } from './resolvers/users.resolver';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\n  {\n    path: 'roles',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpIdentity.Roles' },\n    children: [{ path: '', component: RolesComponent, resolve: [RoleResolver] }],\n  },\n  {\n    path: 'users',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpIdentity.Users' },\n    children: [\n      {\n        path: '',\n        component: UsersComponent,\n        resolve: [RoleResolver, UserResolver],\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [RoleResolver, UserResolver],\n})\nexport class IdentityRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { NgxsModule } from '@ngxs/store';\nimport { RolesComponent } from './components/roles/roles.component';\nimport { IdentityRoutingModule } from './identity-routing.module';\nimport { IdentityState } from './states/identity.state';\nimport { NgbTabsetModule, NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { UsersComponent } from './components/users/users.component';\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\nimport { TableModule } from 'primeng/table';\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n@NgModule({\n  declarations: [RolesComponent, UsersComponent],\n  imports: [\n    NgxsModule.forFeature([IdentityState]),\n    CoreModule,\n    IdentityRoutingModule,\n    NgbTabsetModule,\n    ThemeSharedModule,\n    TableModule,\n    NgbDropdownModule,\n    PermissionManagementModule,\n    NgxValidateCoreModule,\n    PerfectScrollbarModule,\n  ],\n})\nexport class IdentityModule {}\n","import { eLayoutType, ABP } from '@abp/ng.core';\n\nexport const IDENTITY_ROUTES = [\n  {\n    name: 'Administration',\n    path: '',\n    order: 1,\n    wrapper: true,\n  },\n  {\n    name: 'Identity',\n    path: 'identity',\n    order: 1,\n    parentName: 'Administration',\n    layout: eLayoutType.application,\n    children: [\n      { path: 'roles', name: 'Roles', order: 2, requiredPolicy: 'AbpIdentity.Roles' },\n      { path: 'users', name: 'Users', order: 1, requiredPolicy: 'AbpIdentity.Users' },\n    ],\n  },\n] as ABP.FullRoute[];\n"]}