{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@abp/ng.tenant-management/lib/actions/tenant-management.actions.ts","ng://@abp/ng.tenant-management/lib/models/tenant-management.ts","ng://@abp/ng.tenant-management/lib/services/tenant-management.service.ts","ng://@abp/ng.tenant-management/lib/states/tenant-management.state.ts","ng://@abp/ng.tenant-management/lib/components/tenants/tenants.component.ts","ng://@abp/ng.tenant-management/lib/resolvers/tenants.resolver.ts","ng://@abp/ng.tenant-management/lib/tenant-management-routing.module.ts","ng://@abp/ng.tenant-management/lib/tenant-management.module.ts","ng://@abp/ng.tenant-management/lib/constants/routes.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__decorate","decorators","target","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__metadata","metadataKey","metadataValue","metadata","TenantManagement","TenantManagementGet","type","TenantManagementGetById","payload","TenantManagementAdd","TenantManagementUpdate","TenantManagementDelete","TenantManagementService","rest","get","request","method","url","getById","id","delete","add","body","update","getDefaultConnectionString","responseType","updateDefaultConnectionString","params","defaultConnectionString","deleteDefaultConnectionString","Injectable","args","providedIn","RestService","TenantManagementState","tenantManagementService","_a","result","items","patchState","pipe","tap","_b","selectedItem","dispatch","switchMap","_this","getState","tslib_1.__decorate","Action","Selector","State","name","defaults","TenantsComponent","confirmationService","tenantService","fb","store","selectedModalContent","defaultConnectionStringForm","value","createTenantForm","tenantForm","group","selected","Validators","required","maxLength","createDefaultConnectionStringForm","useSharedDatabase","_useSharedDatabase","openModal","title","template","isModalVisible","onEditConnectionString","pluck","subscribe","fetchedConnectionString","connectionStringModalTemplate","onManageFeatures","featuresModalTemplate","onAddTenant","tenantModalTemplate","onEditTenant","save","saveTenant","saveConnectionString","take","connectionString","valid","warn","messageLocalizationParams","status","Component","selector","ConfirmationService","FormBuilder","Store","ViewChild","static","Select","Observable","TenantsResolver","resolve","data","selectSnapshot","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","requiredPolicy","children","TenantManagementRoutingModule","NgModule","imports","RouterModule","forChild","exports","providers","TenantManagementModule","declarations","NgxsModule","forFeature","CoreModule","TableModule","ThemeSharedModule","NgbDropdownModule","parentName","layout","order"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { TenantManagement } from '../models/tenant-management';\n\nexport class TenantManagementGet {\n  static readonly type = '[TenantManagement] Get';\n}\n\nexport class TenantManagementGetById {\n  static readonly type = '[TenantManagement] Get By Id';\n  constructor(public payload: string) {}\n}\n\nexport class TenantManagementAdd {\n  static readonly type = '[TenantManagement] Add';\n  constructor(public payload: TenantManagement.AddRequest) {}\n}\n\nexport class TenantManagementUpdate {\n  static readonly type = '[TenantManagement] Update';\n  constructor(public payload: TenantManagement.UpdateRequest) {}\n}\n\nexport class TenantManagementDelete {\n  static readonly type = '[TenantManagement] Delete';\n  constructor(public payload: string) {}\n}\n","import { ABP } from '@abp/ng.core';\n\nexport namespace TenantManagement {\n  export interface State {\n    result: Response;\n    selectedItem: Item;\n  }\n\n  export type Response = ABP.PagedResponse<Item>;\n\n  export interface Item {\n    id: string;\n    name: string;\n  }\n\n  export interface AddRequest {\n    name: string;\n  }\n\n  export interface UpdateRequest extends AddRequest {\n    id: string;\n  }\n\n  export interface DefaultConnectionStringRequest {\n    id: string;\n    defaultConnectionString: string;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RestService, Rest, ABP } from '@abp/ng.core';\nimport { TenantManagement } from '../models/tenant-management';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TenantManagementService {\n  constructor(private rest: RestService) {}\n\n  get(): Observable<TenantManagement.Response> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: '/api/multi-tenancy/tenants',\n    };\n\n    return this.rest.request<null, TenantManagement.Response>(request);\n  }\n\n  getById(id: string): Observable<ABP.BasicItem> {\n    const request: Rest.Request<null> = {\n      method: 'GET',\n      url: `/api/multi-tenancy/tenants/${id}`,\n    };\n\n    return this.rest.request<null, ABP.BasicItem>(request);\n  }\n\n  delete(id: string): Observable<null> {\n    const request: Rest.Request<null> = {\n      method: 'DELETE',\n      url: `/api/multi-tenancy/tenants/${id}`,\n    };\n\n    return this.rest.request<null, null>(request);\n  }\n\n  add(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\n    const request: Rest.Request<TenantManagement.AddRequest> = {\n      method: 'POST',\n      url: `/api/multi-tenancy/tenants`,\n      body,\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  update(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\n    const url = `/api/multi-tenancy/tenants/${body.id}`;\n    delete body.id;\n\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\n      method: 'PUT',\n      url,\n      body,\n    };\n\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request);\n  }\n\n  getDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenants/${id}/defaultConnectionString`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'GET',\n      responseType: Rest.ResponseType.Text,\n      url,\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request);\n  }\n\n  updateDefaultConnectionString(payload: TenantManagement.DefaultConnectionStringRequest): Observable<any> {\n    const url = `/api/multi-tenancy/tenants/${payload.id}/defaultConnectionString`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'PUT',\n      url,\n      params: { defaultConnectionString: payload.defaultConnectionString },\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n\n  deleteDefaultConnectionString(id: string): Observable<string> {\n    const url = `/api/multi-tenancy/tenant/${id}/defaultConnectionString`;\n\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\n      method: 'DELETE',\n      url,\n    };\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request);\n  }\n}\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\nimport { switchMap, tap } from 'rxjs/operators';\nimport {\n  TenantManagementAdd,\n  TenantManagementDelete,\n  TenantManagementGet,\n  TenantManagementGetById,\n  TenantManagementUpdate,\n} from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { TenantManagementService } from '../services/tenant-management.service';\nimport { ABP } from '@abp/ng.core';\n\n@State<TenantManagement.State>({\n  name: 'TenantManagementState',\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\n})\nexport class TenantManagementState {\n  @Selector()\n  static get({ result }: TenantManagement.State): ABP.BasicItem[] {\n    return result.items || [];\n  }\n\n  constructor(private tenantManagementService: TenantManagementService) {}\n\n  @Action(TenantManagementGet)\n  get({ patchState }: StateContext<TenantManagement.State>) {\n    return this.tenantManagementService.get().pipe(\n      tap(result =>\n        patchState({\n          result,\n        }),\n      ),\n    );\n  }\n\n  @Action(TenantManagementGetById)\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: TenantManagementGetById) {\n    return this.tenantManagementService.getById(payload).pipe(\n      tap(selectedItem =>\n        patchState({\n          selectedItem,\n        }),\n      ),\n    );\n  }\n\n  @Action(TenantManagementDelete)\n  delete({ dispatch }: StateContext<TenantManagement.State>, { payload }: TenantManagementDelete) {\n    return this.tenantManagementService.delete(payload).pipe(switchMap(() => dispatch(new TenantManagementGet())));\n  }\n\n  @Action(TenantManagementAdd)\n  add({ dispatch }: StateContext<TenantManagement.State>, { payload }: TenantManagementAdd) {\n    return this.tenantManagementService.add(payload).pipe(switchMap(() => dispatch(new TenantManagementGet())));\n  }\n\n  @Action(TenantManagementUpdate)\n  update({ dispatch, getState }: StateContext<TenantManagement.State>, { payload }: TenantManagementUpdate) {\n    return dispatch(new TenantManagementGetById(payload.id)).pipe(\n      switchMap(() => this.tenantManagementService.update({ ...getState().selectedItem, ...payload })),\n      switchMap(() => dispatch(new TenantManagementGet())),\n    );\n  }\n}\n","import { ABP } from '@abp/ng.core';\nimport { ConfirmationService, Toaster } from '@abp/ng.theme.shared';\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs';\nimport { pluck, switchMap, take } from 'rxjs/operators';\nimport {\n  TenantManagementAdd,\n  TenantManagementDelete,\n  TenantManagementGetById,\n  TenantManagementUpdate,\n} from '../../actions/tenant-management.actions';\nimport { TenantManagementService } from '../../services/tenant-management.service';\nimport { TenantManagementState } from '../../states/tenant-management.state';\n\ntype SelectedModalContent = {\n  type: string;\n  title: string;\n  template: TemplateRef<any>;\n};\n\n@Component({\n  selector: 'abp-tenants',\n  templateUrl: './tenants.component.html',\n})\nexport class TenantsComponent {\n  @Select(TenantManagementState.get)\n  datas$: Observable<ABP.BasicItem[]>;\n\n  selected: ABP.BasicItem;\n\n  tenantForm: FormGroup;\n\n  defaultConnectionStringForm: FormGroup;\n\n  defaultConnectionString: string;\n\n  isModalVisible: boolean;\n\n  selectedModalContent = {} as SelectedModalContent;\n\n  _useSharedDatabase: boolean;\n\n  get useSharedDatabase(): boolean {\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\n  }\n\n  get connectionString(): string {\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\n  }\n\n  @ViewChild('tenantModalTemplate', { static: false })\n  tenantModalTemplate: TemplateRef<any>;\n\n  @ViewChild('connectionStringModalTemplate', { static: false })\n  connectionStringModalTemplate: TemplateRef<any>;\n\n  @ViewChild('featuresModalTemplate', { static: false })\n  featuresModalTemplate: TemplateRef<any>;\n\n  constructor(\n    private confirmationService: ConfirmationService,\n    private tenantService: TenantManagementService,\n    private fb: FormBuilder,\n    private store: Store,\n  ) {}\n\n  private createTenantForm() {\n    this.tenantForm = this.fb.group({\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\n    });\n  }\n\n  private createDefaultConnectionStringForm() {\n    this.defaultConnectionStringForm = this.fb.group({\n      useSharedDatabase: this._useSharedDatabase,\n      defaultConnectionString: this.defaultConnectionString || '',\n    });\n  }\n\n  openModal(title: string, template: TemplateRef<any>, type: string) {\n    this.selectedModalContent = {\n      title,\n      template,\n      type,\n    };\n\n    this.isModalVisible = true;\n  }\n\n  onEditConnectionString(id: string) {\n    this.store\n      .dispatch(new TenantManagementGetById(id))\n      .pipe(\n        pluck('TenantManagementState', 'selectedItem'),\n        switchMap(selected => {\n          this.selected = selected;\n          return this.tenantService.getDefaultConnectionString(id);\n        }),\n      )\n      .subscribe(fetchedConnectionString => {\n        this._useSharedDatabase = fetchedConnectionString ? false : true;\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\n        this.createDefaultConnectionStringForm();\n        this.openModal('AbpTenantManagement::ConnectionStrings', this.connectionStringModalTemplate, 'saveConnStr');\n      });\n  }\n\n  onManageFeatures(id: string) {\n    this.openModal('AbpTenantManagement::Features', this.featuresModalTemplate, 'saveFeatures');\n  }\n\n  onAddTenant() {\n    this.selected = {} as ABP.BasicItem;\n    this.createTenantForm();\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\n  }\n\n  onEditTenant(id: string) {\n    this.store\n      .dispatch(new TenantManagementGetById(id))\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\n      .subscribe(selected => {\n        this.selected = selected;\n        this.createTenantForm();\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\n      });\n  }\n\n  save() {\n    const { type } = this.selectedModalContent;\n    if (!type) return;\n    if (type === 'saveTenant') this.saveTenant();\n    else if (type === 'saveConnStr') this.saveConnectionString();\n  }\n\n  saveConnectionString() {\n    if (this.useSharedDatabase) {\n      this.tenantService\n        .deleteDefaultConnectionString(this.selected.id)\n        .pipe(take(1))\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    } else {\n      this.tenantService\n        .updateDefaultConnectionString({ id: this.selected.id, defaultConnectionString: this.connectionString })\n        .pipe(take(1))\n        .subscribe(() => {\n          this.isModalVisible = false;\n        });\n    }\n  }\n\n  saveTenant() {\n    if (!this.tenantForm.valid) return;\n\n    this.store\n      .dispatch(\n        this.selected.id\n          ? new TenantManagementUpdate({ ...this.tenantForm.value, id: this.selected.id })\n          : new TenantManagementAdd(this.tenantForm.value),\n      )\n      .subscribe(() => {\n        this.isModalVisible = false;\n      });\n  }\n\n  delete(id: string, name: string) {\n    this.confirmationService\n      .warn('AbpTenantManagement::TenantDeletionConfirmationMessage', 'AbpTenantManagement::AreYouSure', {\n        messageLocalizationParams: [name],\n      })\n      .subscribe((status: Toaster.Status) => {\n        if (status === Toaster.Status.confirm) {\n          this.store.dispatch(new TenantManagementDelete(id));\n        }\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Store } from '@ngxs/store';\nimport { TenantManagementGet } from '../actions/tenant-management.actions';\nimport { TenantManagement } from '../models/tenant-management';\nimport { TenantManagementState } from '../states/tenant-management.state';\n\n@Injectable()\nexport class TenantsResolver implements Resolve<TenantManagement.State> {\n  constructor(private store: Store) {}\n\n  resolve() {\n    const data = this.store.selectSnapshot(TenantManagementState.get);\n    return data && data.length\n     ? null \n     : this.store.dispatch(new TenantManagementGet());\n  }\n}\n","import { AuthGuard, DynamicLayoutComponent, PermissionGuard } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { TenantsResolver } from './resolvers/tenants.resolver';\nimport { TenantsComponent } from './components/tenants/tenants.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\n  {\n    path: 'tenants',\n    component: DynamicLayoutComponent,\n    canActivate: [AuthGuard, PermissionGuard],\n    data: { requiredPolicy: 'AbpTenantManagement.Tenants' },\n    children: [{ path: '', component: TenantsComponent, resolve: [TenantsResolver] }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: [TenantsResolver],\n})\nexport class TenantManagementRoutingModule {}\n","import { CoreModule } from '@abp/ng.core';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { NgModule } from '@angular/core';\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxsModule } from '@ngxs/store';\nimport { TableModule } from 'primeng/table';\nimport { TenantsComponent } from './components/tenants/tenants.component';\nimport { TenantManagementState } from './states/tenant-management.state';\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\n\n@NgModule({\n  declarations: [TenantsComponent],\n  imports: [\n    TenantManagementRoutingModule,\n    NgxsModule.forFeature([TenantManagementState]),\n    CoreModule,\n    TableModule,\n    ThemeSharedModule,\n    NgbDropdownModule,\n  ],\n})\nexport class TenantManagementModule {}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\nexport const TENANT_MANAGEMENT_ROUTES = [\n  {\n    name: 'Tenant Management',\n    path: 'tenant-management',\n    parentName: 'Administration',\n    layout: eLayoutType.application,\n    children: [\n      {\n        path: 'tenants',\n        name: 'Tenants',\n        order: 1,\n        requiredPolicy: 'AbpTenantManagement.Tenants',\n      },\n    ],\n  },\n] as ABP.FullRoute[];\n"]}