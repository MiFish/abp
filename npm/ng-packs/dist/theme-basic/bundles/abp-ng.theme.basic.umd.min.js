!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@abp/ng.core"),require("@angular/core"),require("@ng-bootstrap/ng-bootstrap"),require("@angular/forms"),require("@ngx-validate/core"),require("@ngxs/store"),require("@ngxs/router-plugin"),require("angular-oauth2-oidc"),require("just-compare"),require("rxjs"),require("rxjs/operators"),require("snq"),require("@abp/ng.theme.shared"),require("primeng/toast")):"function"==typeof define&&define.amd?define("@abp/ng.theme.basic",["exports","@abp/ng.core","@angular/core","@ng-bootstrap/ng-bootstrap","@angular/forms","@ngx-validate/core","@ngxs/store","@ngxs/router-plugin","angular-oauth2-oidc","just-compare","rxjs","rxjs/operators","snq","@abp/ng.theme.shared","primeng/toast"],n):n(((e=e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng.theme=e.abp.ng.theme||{},e.abp.ng.theme.basic={}),e.ng_core,e.ng.core,e.ngBootstrap,e.ng.forms,e.core$1,e.store,e.routerPlugin,e.angularOauth2Oidc,e.compare,e.rxjs,e.rxjs.operators,e.snq,e.ng_theme_shared,e.toast)}(this,function(e,n,t,o,a,r,i,s,l,p,u,d,c,m,g){"use strict";p=p&&p.hasOwnProperty("default")?p.default:p,c=c&&c.hasOwnProperty("default")?c.default:c;var b=function(){return(b=Object.assign||function(e){for(var n,t=1,o=arguments.length;t<o;t++)for(var a in n=arguments[t])Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a]);return e}).apply(this,arguments)};function f(e,n,t,o){var a,r=arguments.length,i=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,o);else for(var s=e.length-1;s>=0;s--)(a=e[s])&&(i=(r<3?a(i):r>3?a(n,t,i):a(n,t))||i);return r>3&&i&&Object.defineProperty(n,t,i),i}function y(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)}function h(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var o,a,r=t.call(e),i=[];try{for(;(void 0===n||n-- >0)&&!(o=r.next()).done;)i.push(o.value)}catch(e){a={error:e}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(a)throw a.error}}return i}function v(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(h(arguments[n]));return e}var w=a.Validators.minLength,C=a.Validators.required,P=function(){function e(e,n){this.fb=e,this.store=n,this.visibleChange=new t.EventEmitter}return Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){this._visible=e,this.visibleChange.emit(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.form=this.fb.group({password:["",[C,w(6),r.validatePassword(["small","capital","number","special"])]],newPassword:["",[C,w(6),r.validatePassword(["small","capital","number","special"])]],repeatNewPassword:["",[C,w(6),r.validatePassword(["small","capital","number","special"])]]},{validators:[r.comparePasswords(["newPassword","repeatNewPassword"])]})},e.prototype.onSubmit=function(){var e=this;this.form.invalid||this.store.dispatch(new n.ProfileChangePassword({currentPassword:this.form.get("password").value,newPassword:this.form.get("newPassword").value})).subscribe(function(){e.visible=!1})},e.prototype.openModal=function(){this.visible=!0},e.prototype.ngOnChanges=function(e){var n=e.visible;n&&(n.currentValue?this.openModal():!1===n.currentValue&&this.visible&&(this.visible=!1))},e.decorators=[{type:t.Component,args:[{selector:"abp-change-password",template:'<abp-modal *ngIf="visible" [(visible)]="visible">\n  <ng-template #abpHeader>\n    <h4>{{ \'AbpIdentity::ChangePassword\' | abpLocalization }}</h4>\n  </ng-template>\n  <ng-template #abpBody>\n    <form [formGroup]="form" novalidate>\n      <div class="form-group">\n        <label for="current-password">{{ \'AbpIdentity::DisplayName:CurrentPassword\' | abpLocalization }}</label\n        ><span> * </span><input type="password" id="current-password" class="form-control" formControlName="password" />\n      </div>\n      <div class="form-group">\n        <label for="new-password">{{ \'AbpIdentity::DisplayName:NewPassword\' | abpLocalization }}</label\n        ><span> * </span><input type="password" id="new-password" class="form-control" formControlName="newPassword" />\n      </div>\n      <div class="form-group" [class.is-invalid]="form.errors?.passwordMismatch">\n        <label for="confirm-new-password">{{ \'AbpIdentity::DisplayName:NewPasswordConfirm\' | abpLocalization }}</label\n        ><span> * </span\n        ><input type="password" id="confirm-new-password" class="form-control" formControlName="repeatNewPassword" />\n        <div *ngIf="form.errors?.passwordMismatch" class="invalid-feedback">\n          {{ \'AbpIdentity::Identity.PasswordConfirmationFailed\' | abpLocalization }}\n        </div>\n      </div>\n    </form>\n  </ng-template>\n  <ng-template #abpFooter>\n    <button type="button" class="btn btn-secondary" #abpClose>\n      {{ \'AbpIdentity::Cancel\' | abpLocalization }}\n    </button>\n    <button type="button" class="btn btn-primary" (click)="onSubmit()">\n      <i class="fa fa-check mr-1"></i> <span>{{ \'AbpIdentity::Save\' | abpLocalization }}</span>\n    </button>\n  </ng-template>\n</abp-modal>\n'}]}],e.ctorParameters=function(){return[{type:a.FormBuilder},{type:i.Store}]},e.propDecorators={visible:[{type:t.Input}],visibleChange:[{type:t.Output}],modalContent:[{type:t.ViewChild,args:["modalContent",{static:!1}]}]},e}(),N=function(){function e(){this.isCollapsed=!1}return e.type="account",e.decorators=[{type:t.Component,args:[{selector:"abp-layout-account",template:'<abp-layout>\n  <ul class="navbar-nav mr-auto">\n    <li class="nav-item">\n      <a class="nav-link" href="/">\n        Home\n      </a>\n    </li>\n  </ul>\n\n  <span id="main-navbar-tools">\n    <span>\n      <div class="dropdown d-inline" ngbDropdown>\n        <a class="btn btn-link dropdown-toggle" role="button" data-toggle="dropdown" ngbDropdownToggle>\n          English\n        </a>\n\n        <div class="dropdown-menu" ngbDropdownMenu>\n          <a class="dropdown-item">Čeština</a>\n          <a class="dropdown-item">Português</a>\n          <a class="dropdown-item">Türkçe</a>\n          <a class="dropdown-item">简体中文</a>\n        </div>\n      </div>\n    </span>\n  </span>\n</abp-layout>\n'}]}],e}(),L=function(){function e(e){this.payload=e}return e.type="[Layout] Add Navigation Element",e}(),O=function(){function e(e){this.name=e}return e.type="[Layout] Remove Navigation ElementByName",e}(),D=function(){function e(){}return e.getNavigationElements=function(e){return e.navigationElements},e.prototype.layoutAddAction=function(e,n){var t=e.getState,o=e.patchState,a=n.payload,r=void 0===a?[]:a,i=t().navigationElements;if(Array.isArray(r)||(r=[r]),i.length&&(r=c(function(){return r.filter(function(e){var n=e.name;return i.findIndex(function(e){return e.name===n})<0})},[])),r.length)return o({navigationElements:i=v(i,r).map(function(e){return b({},e,{order:e.order||99})}).sort(function(e,n){return e.order-n.order})})},e.prototype.layoutRemoveAction=function(e,n){var t=e.getState,o=e.patchState,a=n.name,r=t().navigationElements,i=r.findIndex(function(e){return e.name===a});return i>-1&&(r=r.splice(i,1)),o({navigationElements:r})},f([i.Action(L),y("design:type",Function),y("design:paramtypes",[Object,L]),y("design:returntype",void 0)],e.prototype,"layoutAddAction",null),f([i.Action(O),y("design:type",Function),y("design:paramtypes",[Object,O]),y("design:returntype",void 0)],e.prototype,"layoutRemoveAction",null),f([i.Selector(),y("design:type",Function),y("design:paramtypes",[Object]),y("design:returntype",Array)],e,"getNavigationElements",null),e=f([i.State({name:"LayoutState",defaults:{navigationElements:[]}})],e)}(),k=function(){function e(e,n){this.store=e,this.oauthService=n,this.isOpenChangePassword=!1,this.isOpenProfile=!1,this.rightPartElements=[],this.trackByFn=function(e,n){return n.name},this.trackElementByFn=function(e,n){return n}}return Object.defineProperty(e.prototype,"visibleRoutes$",{get:function(){return this.routes$.pipe(d.map(function(e){return function e(n){return n.reduce(function(n,t){return t.invisible?n:(t.children&&t.children.length&&(t.children=e(t.children)),v(n,[t]))},[])}(e)}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"defaultLanguage$",{get:function(){var e=this;return this.languages$.pipe(d.map(function(n){return c(function(){return n.find(function(n){return n.cultureName===e.selectedLangCulture}).displayName})},""))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"dropdownLanguages$",{get:function(){var e=this;return this.languages$.pipe(d.map(function(n){return c(function(){return n.filter(function(n){return n.cultureName!==e.selectedLangCulture})})},[]))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selectedLangCulture",{get:function(){return this.store.selectSnapshot(n.SessionState.getLanguage)},enumerable:!0,configurable:!0}),e.prototype.checkWindowWidth=function(){var e=this;setTimeout(function(){e.navbarRootDropdowns.forEach(function(e){e.close()}),window.innerWidth<768?e.isDropdownChildDynamic=!1:e.isDropdownChildDynamic=!0},0)},e.prototype.ngAfterViewInit=function(){var e=this;this.store.selectSnapshot(D.getNavigationElements).map(function(e){return e.name}).indexOf("LanguageRef")<0&&this.store.dispatch(new L([{element:this.languageRef,order:4,name:"LanguageRef"},{element:this.currentUserRef,order:5,name:"CurrentUserRef"}])),this.navElements$.pipe(d.map(function(e){return e.map(function(e){return e.element})}),d.filter(function(n){return!p(n,e.rightPartElements)}),n.takeUntilDestroy(this)).subscribe(function(n){setTimeout(function(){return e.rightPartElements=n},0)}),this.checkWindowWidth(),u.fromEvent(window,"resize").pipe(n.takeUntilDestroy(this),d.debounceTime(250)).subscribe(function(){e.checkWindowWidth()})},e.prototype.ngOnDestroy=function(){},e.prototype.onChangeLang=function(e){this.store.dispatch(new n.SessionSetLanguage(e)),this.store.dispatch(new n.ConfigGetAppConfiguration)},e.prototype.logout=function(){this.oauthService.logOut(),this.store.dispatch(new s.Navigate(["/account/login"],null,{state:{redirectUrl:this.store.selectSnapshot(s.RouterState).state.url}})),this.store.dispatch(new n.ConfigGetAppConfiguration)},e.type="application",e.decorators=[{type:t.Component,args:[{selector:"abp-layout-application",template:'<abp-layout>\n  <ul class="navbar-nav mr-auto">\n    <ng-container\n      *ngFor="let route of visibleRoutes$ | async; trackBy: trackByFn"\n      [ngTemplateOutlet]="route?.children?.length ? dropdownLink : defaultLink"\n      [ngTemplateOutletContext]="{ $implicit: route }"\n    >\n    </ng-container>\n\n    <ng-template #defaultLink let-route>\n      <li class="nav-item" [abpPermission]="route.requiredPolicy">\n        <a class="nav-link" [routerLink]="[route.url]">{{ route.name | abpLocalization }}</a>\n      </li>\n    </ng-template>\n\n    <ng-template #dropdownLink let-route>\n      <li\n        #navbarRootDropdown\n        class="nav-item dropdown"\n        ngbDropdown\n        display="static"\n        [abpPermission]="route.requiredPolicy"\n        [abpVisibility]="routeContainer"\n      >\n        <a ngbDropdownToggle class="nav-link dropdown-toggle" data-toggle="dropdown">\n          {{ route.name | abpLocalization }}\n        </a>\n        <div #routeContainer ngbDropdownMenu class="dropdown-menu dropdown-menu-right">\n          <ng-template\n            #forTemplate\n            ngFor\n            [ngForOf]="route.children"\n            [ngForTrackBy]="trackByFn"\n            [ngForTemplate]="childWrapper"\n          ></ng-template>\n        </div>\n      </li>\n    </ng-template>\n\n    <ng-template #childWrapper let-child>\n      <ng-template\n        [ngTemplateOutlet]="child?.children?.length ? dropdownChild : defaultChild"\n        [ngTemplateOutletContext]="{ $implicit: child }"\n      ></ng-template>\n    </ng-template>\n\n    <ng-template #defaultChild let-child>\n      <div class="dropdown-submenu" [abpPermission]="child.requiredPolicy">\n        <a class="dropdown-item py-2 px-2" [routerLink]="[child.url]">{{ child.name | abpLocalization }}</a>\n      </div>\n    </ng-template>\n\n    <ng-template #dropdownChild let-child>\n      <div\n        [abpVisibility]="childrenContainer"\n        class="dropdown-submenu"\n        ngbDropdown\n        [display]="isDropdownChildDynamic ? \'dynamic\' : \'static\'"\n        placement="right-top"\n        [abpPermission]="child.requiredPolicy"\n      >\n        <div ngbDropdownToggle [class.dropdown-toggle]="false">\n          <a\n            abpEllipsis="140px"\n            [abpEllipsisEnabled]="isDropdownChildDynamic"\n            role="button"\n            class="btn d-block text-left py-2 px-2 dropdown-toggle"\n          >\n            {{ child.name | abpLocalization }}\n          </a>\n        </div>\n        <div #childrenContainer ngbDropdownMenu class="dropdown-menu dropdown-menu-right">\n          <ng-template\n            ngFor\n            [ngForOf]="child.children"\n            [ngForTrackBy]="trackByFn"\n            [ngForTemplate]="childWrapper"\n          ></ng-template>\n        </div>\n      </div>\n    </ng-template>\n  </ul>\n\n  <ul class="navbar-nav ml-auto">\n    <ng-container\n      *ngFor="let element of rightPartElements; trackBy: trackElementByFn"\n      [ngTemplateOutlet]="element"\n    ></ng-container>\n  </ul>\n</abp-layout>\n\n<ng-template #language>\n  <li class="nav-item dropdown" ngbDropdown>\n    <a ngbDropdownToggle class="nav-link dropdown-toggle" data-toggle="dropdown">\n      {{ defaultLanguage$ | async }}\n    </a>\n    <div ngbDropdownMenu class="dropdown-menu dropdown-menu-right">\n      <a\n        *ngFor="let lang of dropdownLanguages$ | async"\n        class="dropdown-item"\n        (click)="onChangeLang(lang.cultureName)"\n        >{{ lang?.displayName }}</a\n      >\n    </div>\n  </li>\n</ng-template>\n\n<ng-template #currentUser>\n  <li *ngIf="(currentUser$ | async)?.isAuthenticated" class="nav-item dropdown" ngbDropdown>\n    <a ngbDropdownToggle class="nav-link dropdown-toggle" data-toggle="dropdown">\n      {{ (currentUser$ | async)?.userName }}\n    </a>\n    <div ngbDropdownMenu class="dropdown-menu dropdown-menu-right">\n      <a class="dropdown-item pointer" (click)="isOpenChangePassword = true">Change Password</a>\n      <a class="dropdown-item pointer" (click)="isOpenProfile = true">My Profile</a>\n      <a class="dropdown-item pointer" (click)="logout()">Logout</a>\n    </div>\n  </li>\n\n  <abp-change-password [(visible)]="isOpenChangePassword"></abp-change-password>\n\n  <abp-profile [(visible)]="isOpenProfile"></abp-profile>\n</ng-template>\n'}]}],e.ctorParameters=function(){return[{type:i.Store},{type:l.OAuthService}]},e.propDecorators={currentUserRef:[{type:t.ViewChild,args:["currentUser",{static:!1,read:t.TemplateRef}]}],languageRef:[{type:t.ViewChild,args:["language",{static:!1,read:t.TemplateRef}]}],navbarRootDropdowns:[{type:t.ViewChildren,args:["navbarRootDropdown",{read:o.NgbDropdown}]}]},f([i.Select(n.ConfigState.getOne("routes")),y("design:type",u.Observable)],e.prototype,"routes$",void 0),f([i.Select(n.ConfigState.getOne("currentUser")),y("design:type",u.Observable)],e.prototype,"currentUser$",void 0),f([i.Select(n.ConfigState.getDeep("localization.languages")),y("design:type",u.Observable)],e.prototype,"languages$",void 0),f([i.Select(D.getNavigationElements),y("design:type",u.Observable)],e.prototype,"navElements$",void 0),e}();var S,x=function(){function e(){}return e.type="empty",e.decorators=[{type:t.Component,args:[{selector:"abp-layout-empty",template:"\n    Layout-empty\n    <router-outlet></router-outlet>\n  "}]}],e}(),A=function(){function e(){this.isCollapsed=!1}return e.decorators=[{type:t.Component,args:[{selector:" abp-layout",template:'<nav class="navbar navbar-expand-md navbar-dark bg-dark fixed-top" id="main-navbar">\n  <a class="navbar-brand" routerLink="/">MyProjectName</a>\n  <button class="navbar-toggler" type="button" [attr.aria-expanded]="!isCollapsed" (click)="isCollapsed = !isCollapsed">\n    <span class="navbar-toggler-icon"></span>\n  </button>\n  <div class="collapse navbar-collapse" id="main-navbar-collapse" [ngbCollapse]="isCollapsed">\n    <ng-content></ng-content>\n  </div>\n</nav>\n\n<div style="padding-top: 5rem;" class="container">\n  <router-outlet></router-outlet>\n</div>\n\n<abp-confirmation></abp-confirmation>\n<abp-toast></abp-toast>\n'}]}],e}(),E=a.Validators.maxLength,F=a.Validators.required,I=a.Validators.email,j=function(){function e(e,n){this.fb=e,this.store=n,this.visibleChange=new t.EventEmitter}return Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){this._visible=e,this.visibleChange.emit(e)},enumerable:!0,configurable:!0}),e.prototype.buildForm=function(){var e=this;this.store.dispatch(new n.ProfileGet).pipe(d.withLatestFrom(this.profile$),d.take(1)).subscribe(function(n){var t=h(n,2)[1];e.form=e.fb.group({userName:[t.userName,[F,E(256)]],email:[t.email,[F,I,E(256)]],name:[t.name||"",[E(64)]],surname:[t.surname||"",[E(64)]],phoneNumber:[t.phoneNumber||"",[E(16)]]})})},e.prototype.onSubmit=function(){var e=this;this.form.invalid||this.store.dispatch(new n.ProfileUpdate(this.form.value)).subscribe(function(){e.visible=!1})},e.prototype.openModal=function(){this.buildForm(),this.visible=!0},e.prototype.ngOnChanges=function(e){var n=e.visible;n&&(n.currentValue?this.openModal():!1===n.currentValue&&this.visible&&(this.visible=!1))},e.decorators=[{type:t.Component,args:[{selector:"abp-profile",template:'<abp-modal *ngIf="visible" [(visible)]="visible">\n  <ng-template #abpHeader>\n    <h4>{{ \'AbpIdentity::PersonalInfo\' | abpLocalization }}</h4>\n  </ng-template>\n  <ng-template #abpBody>\n    <form *ngIf="form" [formGroup]="form" novalidate>\n      <div class="form-group">\n        <label for="username">{{ \'AbpIdentity::DisplayName:UserName\' | abpLocalization }}</label\n        ><span> * </span><input type="text" id="username" class="form-control" formControlName="userName" />\n      </div>\n      <div class="row">\n        <div class="col col-md-6">\n          <div class="form-group">\n            <label for="name">{{ \'AbpIdentity::DisplayName:Name\' | abpLocalization }}</label\n            ><input type="text" id="name" class="form-control" formControlName="name" />\n          </div>\n        </div>\n        <div class="col col-md-6">\n          <div class="form-group">\n            <label for="surname">{{ \'AbpIdentity::DisplayName:Surname\' | abpLocalization }}</label\n            ><input type="text" id="surname" class="form-control" formControlName="surname" />\n          </div>\n        </div>\n      </div>\n      <div class="form-group">\n        <label for="email-address">{{ \'AbpIdentity::DisplayName:Email\' | abpLocalization }}</label\n        ><span> * </span><input type="text" id="email-address" class="form-control" formControlName="email" />\n      </div>\n      <div class="form-group">\n        <label for="phone-number">{{ \'AbpIdentity::DisplayName:PhoneNumber\' | abpLocalization }}</label\n        ><input type="text" id="phone-number" class="form-control" formControlName="phoneNumber" />\n      </div>\n    </form>\n  </ng-template>\n  <ng-template #abpFooter>\n    <button #abpClose type="button" class="btn btn-secondary">\n      {{ \'AbpIdentity::Cancel\' | abpLocalization }}\n    </button>\n    <button type="button" class="btn btn-primary" (click)="onSubmit()">\n      <i class="fa fa-check mr-1"></i> <span>{{ \'AbpIdentity::Save\' | abpLocalization }}</span>\n    </button>\n  </ng-template>\n</abp-modal>\n'}]}],e.ctorParameters=function(){return[{type:a.FormBuilder},{type:i.Store}]},e.propDecorators={visible:[{type:t.Input}],visibleChange:[{type:t.Output}]},f([i.Select(n.ProfileState.getProfile),y("design:type",u.Observable)],e.prototype,"profile$",void 0),e}(),R=[k,N,x],T=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:v(R,[A,P,j]),imports:[n.CoreModule,m.ThemeSharedModule,o.NgbCollapseModule,o.NgbDropdownModule,g.ToastModule,r.NgxValidateCoreModule,i.NgxsModule.forFeature([D])],exports:v(R),entryComponents:v(R)}]}],e}();!function(e){e.State=function(){},e.NavigationElement=function(){}}(S||(S={})),e.LAYOUTS=R,e.LayoutAccountComponent=N,e.LayoutAddNavigationElement=L,e.LayoutApplicationComponent=k,e.LayoutEmptyComponent=x,e.LayoutRemoveNavigationElementByName=O,e.LayoutState=D,e.ThemeBasicModule=T,e.ɵa=k,e.ɵb=D,e.ɵc=N,e.ɵd=x,e.ɵe=A,e.ɵf=P,e.ɵg=j,e.ɵh=D,e.ɵi=L,e.ɵj=O,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=abp-ng.theme.basic.umd.min.js.map