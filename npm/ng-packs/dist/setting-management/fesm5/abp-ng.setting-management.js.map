{"version":3,"file":"abp-ng.setting-management.js","sources":["ng://@abp/ng.setting-management/lib/root-setting-management.module.ts","ng://@abp/ng.setting-management/lib/components/services/initial.service.ts","ng://@abp/ng.setting-management/lib/components/setting/setting.component.ts","ng://@abp/ng.setting-management/lib/setting-management-routing.module.ts","ng://@abp/ng.setting-management/lib/setting-management.module.ts","ng://@abp/ng.setting-management/lib/constants/routes.ts"],"sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\n\n@NgModule({})\nexport class RootSettingManagementModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: RootSettingManagementModule,\n      providers: [],\n    };\n  }\n}\n","import { SettingTab } from '@abp/ng.theme.shared';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport snq from 'snq';\n\n@Injectable()\nexport class InitialService {\n  public settings: SettingTab[];\n\n  constructor(private router: Router) {\n    this.settings = this.router.config\n      .map(route => snq(() => route.data.routes.settings))\n      .filter(settings => settings && settings.length)\n      .reduce((acc, val) => [...acc, ...val], [])\n      .sort((a, b) => a.order - b.order);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SettingTab, fade } from '@abp/ng.theme.shared';\nimport { InitialService } from '../services/initial.service';\n\n@Component({\n  selector: 'abp-setting',\n  templateUrl: './setting.component.html',\n})\nexport class SettingComponent implements OnInit {\n  settings: SettingTab[];\n\n  selected = {} as SettingTab;\n\n  constructor(private initialService: InitialService) {}\n\n  ngOnInit() {\n    this.settings = this.initialService.settings;\n    this.selected = this.settings[0];\n  }\n}\n","import { DynamicLayoutComponent } from '@abp/ng.core';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SettingComponent } from './components/setting/setting.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [{ path: '', component: SettingComponent }],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingManagementRoutingModule {}\n","import { CoreModule, noop } from '@abp/ng.core';\nimport { NgModule, ModuleWithProviders, APP_INITIALIZER, Self } from '@angular/core';\nimport { SettingComponent } from './components/setting/setting.component';\nimport { SettingManagementRoutingModule } from './setting-management-routing.module';\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\nimport { InitialService } from './components/services/initial.service';\n\n@NgModule({\n  declarations: [SettingComponent],\n  imports: [SettingManagementRoutingModule, CoreModule, ThemeSharedModule],\n  providers: [InitialService],\n})\nexport class SettingManagementModule {\n  constructor(@Self() initialService: InitialService) {}\n}\n","import { ABP, eLayoutType } from '@abp/ng.core';\n\nexport const SETTING_MANAGEMENT_ROUTES = {\n  routes: [\n    {\n      name: 'Settings',\n      path: 'setting-management',\n      parentName: 'AbpUiNavigation::Menu:Administration',\n      layout: eLayoutType.application,\n      order: 6,\n      iconClass: 'fa fa-cog',\n    },\n  ] as ABP.FullRoute[],\n  settings: [],\n};\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;IAEA;KAQC;;;;IANQ,mCAAO;;;IAAd;QACE,OAAO;YACL,QAAQ,EAAE,2BAA2B;YACrC,SAAS,EAAE,EAAE;SACd,CAAC;KACH;;gBAPF,QAAQ,SAAC,EAAE;;IAQZ,kCAAC;CARD;;;;;;;ICOE,wBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAChC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM;aAC/B,GAAG;;;;QAAC,UAAA,KAAK,IAAI,OAAA,GAAG;;;QAAC,cAAM,OAAA,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAA,EAAC,GAAA,EAAC;aACnD,MAAM;;;;QAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAA,EAAC;aAC/C,MAAM;;;;;QAAC,UAAC,GAAG,EAAE,GAAG,IAAK,gBAAI,GAAG,EAAK,GAAG,IAAC,GAAE,EAAE,CAAC;aAC1C,IAAI;;;;;QAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,GAAA,EAAC,CAAC;KACtC;;gBAVF,UAAU;;;;gBAHF,MAAM;;IAcf,qBAAC;CAXD,IAWC;;;IATC,kCAA8B;;;;;IAElB,gCAAsB;;;;;;;ACTpC;IAaE,0BAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAFlD,aAAQ,sBAAG,EAAE,EAAc,CAAC;KAE0B;;;;IAEtD,mCAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;QAC7C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAClC;;gBAdF,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,suDAAuC;iBACxC;;;;gBALQ,cAAc;;IAiBvB,uBAAC;CAfD,IAeC;;;IAVC,oCAAuB;;IAEvB,oCAA4B;;;;;IAEhB,0CAAsC;;;;;;;ACbpD;IAKM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sBAAsB;QACjC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC;KACtD;CACF;AAED;IAAA;KAI8C;;gBAJ7C,QAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;iBACxB;;IAC4C,qCAAC;CAJ9C;;;;;;ACbA;IAaE,iCAAoB,cAA8B;KAAI;;gBANvD,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,gBAAgB,CAAC;oBAChC,OAAO,EAAE,CAAC,8BAA8B,EAAE,UAAU,EAAE,iBAAiB,CAAC;oBACxE,SAAS,EAAE,CAAC,cAAc,CAAC;iBAC5B;;;;gBANQ,cAAc,uBAQR,IAAI;;IACnB,8BAAC;CAPD;;;;;;;;;;;;ACLA,IAAa,yBAAyB,GAAG;IACvC,MAAM,qBAAE;QACN;YACE,IAAI,EAAE,UAAU;YAChB,IAAI,EAAE,oBAAoB;YAC1B,UAAU,EAAE,sCAAsC;YAClD,MAAM;YACN,KAAK,EAAE,CAAC;YACR,SAAS,EAAE,WAAW;SACvB;KACF,EAAmB;IACpB,QAAQ,EAAE,EAAE;CACb;;;;;;;;;;;;;;;;;;;"}